"""user_migrations

Revision ID: 0b1d1b9da033
Revises: 
Create Date: 2023-10-25 19:27:39.498963

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b1d1b9da033'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('country_code', sa.String(length=100), nullable=True),
    sa.Column('mobile_number', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.String(length=100), nullable=True),
    sa.Column('referral_code', sa.String(length=100), nullable=False),
    sa.Column('referred_by', sa.String(), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=False),
    sa.Column('average_score', sa.Float(), nullable=True),
    sa.Column('total_trips', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('referral_code')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_table('otp_authentications',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('ip_address', sa.String(length=50), nullable=False),
    sa.Column('user_agent', sa.String(length=100), nullable=False),
    sa.Column('login_attempt_time', sa.DateTime(), nullable=False),
    sa.Column('otp_code', sa.String(length=6), nullable=False),
    sa.Column('otp_expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_otp_authentications_id'), 'otp_authentications', ['id'], unique=True)
    op.create_index(op.f('ix_otp_authentications_user_id'), 'otp_authentications', ['user_id'], unique=False)
    op.create_table('trips',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('start_latitude', sa.String(length=100), nullable=True),
    sa.Column('start_longitude', sa.String(length=100), nullable=True),
    sa.Column('end_latitude', sa.String(length=100), nullable=True),
    sa.Column('end_longitude', sa.String(length=100), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('number_of_frames', sa.Integer(), nullable=True),
    sa.Column('total_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trips_id'), 'trips', ['id'], unique=True)
    op.create_index(op.f('ix_trips_user_id'), 'trips', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('ip_address', sa.String(length=50), nullable=False),
    sa.Column('user_agent', sa.String(length=100), nullable=False),
    sa.Column('login_time', sa.DateTime(), nullable=False),
    sa.Column('logout_time', sa.DateTime(), nullable=True),
    sa.Column('session_expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_trips_user_id'), table_name='trips')
    op.drop_index(op.f('ix_trips_id'), table_name='trips')
    op.drop_table('trips')
    op.drop_index(op.f('ix_otp_authentications_user_id'), table_name='otp_authentications')
    op.drop_index(op.f('ix_otp_authentications_id'), table_name='otp_authentications')
    op.drop_table('otp_authentications')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
